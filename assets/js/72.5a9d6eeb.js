(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{364:function(t,a,s){"use strict";s.r(a);var e=s(4),v=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"mpvue2-0多端小程序框架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mpvue2-0多端小程序框架"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"http://mpvue.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("mpVue2.0"),a("OutboundLink")],1),t._v("多端小程序框架")]),t._v(" "),a("blockquote",[a("p",[t._v("https://github.com/mpvue/mpvue-docs/tree/master/docs/mpvue")]),t._v(" "),a("p",[t._v("http://mpvue.com/mpvue/quickstart.html")])]),t._v(" "),a("h4",{attrs:{id:"注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[t._v("#")]),t._v(" 注意事项：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("目前mpvue框架使用的是vue2.x，所以需要使用vue2.x的脚手架")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),t._v(" vue-cli\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"搭建mpvue脚手架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#搭建mpvue脚手架"}},[t._v("#")]),t._v(" 搭建mpvue脚手架")]),t._v(" "),a("ul",[a("li",[t._v("基于"),a("code",[t._v("mpvue-quickstart")]),t._v("模板创建新项目")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("// my-project 为创建的项目名\nvue init mpvue/mpvue-quickstart my-project\n")])])]),a("ul",[a("li",[t._v("安装依赖和运行")])]),t._v(" "),a("blockquote",[a("p",[t._v("也可以使用yarn进行安装；")]),t._v(" "),a("p",[t._v("yarn装包成功后框架提供的readme中是使用npm dev这里是错误的")]),t._v(" "),a("p",[t._v("直接使用yarn dev就可以了")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" my-project\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run dev\n")])])]),a("h3",{attrs:{id:"对比小程序中的特殊传参和方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对比小程序中的特殊传参和方法"}},[t._v("#")]),t._v(" 对比小程序中的特殊传参和方法")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("如何获取小程序在 page onLoad 时候传递的 options")])]),t._v(" "),a("ul",[a("li",[t._v("在所有 页面 的组件内可以通过 "),a("code",[t._v("this.$root.$mp.query")]),t._v(" 进行获取。")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("如何获取小程序在 app onLaunch/onShow 时候传递的 options")])]),t._v(" "),a("ul",[a("li",[t._v("在所有的组件内可以通过 "),a("code",[t._v("this.$root.$mp.appOptions")]),t._v(" 进行获取。")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("如何捕获 app 的 onError")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("由于 onError 并不是完整意义的生命周期，所以只提供一个捕获错误的方法，在 app 的根组件上添加名为 onError 的回调函数即可。如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只有 app 才会有 onLaunch 的生命周期")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onLaunch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 捕获 app error")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onError")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])])]),t._v(" "),a("h3",{attrs:{id:"mpvue框架使用的相关建议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mpvue框架使用的相关建议"}},[t._v("#")]),t._v(" mpvue框架使用的相关建议")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("不要在选项属性或回调上使用箭头函数")])]),t._v(" "),a("li",[a("p",[t._v("比如 "),a("code",[t._v("created: () => console.log(this.a)")]),t._v(" 或 "),a("code",[t._v("vm.$watch('a', newValue => this.myMethod())")]),t._v("。因为箭头函数是和父级上下文绑定在一起的，"),a("code",[t._v("this")]),t._v(" 不会是如你做预期的 Vue 实例，且 "),a("code",[t._v("this.a")]),t._v(" 或 "),a("code",[t._v("this.myMethod")]),t._v(" 也会是未定义的。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("精简 data 数据")])]),t._v(" "),a("ul",[a("li",[t._v("冗余数据不要挂在 data 里，所有在 data/props/computed 中的数据，每次变更都会从微信小程序的 JSCore 进程，通过 setData 序列化成字符串后发送到 JSRender 进程。所以，如果你的数据量巨大的时候，会导致页面非常卡顿。")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("优化长列表性能")])]),t._v(" "),a("ul",[a("li",[t._v("避免在 v-for 中嵌套子组件，这样可以优化大部分部分 setData 时的冗余数据。")]),t._v(" "),a("li",[t._v("通过实践发现 wx:if 和 hidden 的优化肉眼不可见，所以或许可以试试直接通过样式 display 来展示和隐藏。")]),t._v(" "),a("li",[t._v("如果列表过长，强烈建议产品思考更好的展示形态。比如只展示热门，多余的折叠等形式。")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("合理使用双向绑定")]),t._v(" "),a("code",[t._v("mpvue")]),t._v(" 建议使用 "),a("code",[t._v("v-model.lazy")]),t._v(" 绑定方式以优化性能，此外 "),a("code",[t._v("v-model")]),t._v(" 在老基础库下输入框输入时可能存在光标重设的问题。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("谨慎选择直接使用小程序的 API")]),t._v(" 如果你有小程序和H5复用代码的需要，业务代码需要保持对 WEB "),a("code",[t._v("Vue.js")]),t._v(" 的兼容性。此时我们不建议在代码中直接调用小程序API，更好的选择是通过桥接适配层屏蔽两端差异。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("列表渲染")])]),t._v(" "),a("ul",[a("li",[t._v("嵌套列表渲染，必须指定不同的索引")])])])]),t._v(" "),a("h3",{attrs:{id:"mpvue踩坑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mpvue踩坑"}},[t._v("#")]),t._v(" mpvue踩坑")]),t._v(" "),a("ul",[a("li",[t._v("列表中没有的原生事件也可以使用例如 bindregionchange 事件直接在 dom 上将bind改为@ "),a("code",[t._v("@regionchange")]),t._v(",同时这个事件也非常特殊，它的 event type 有 begin 和 end 两个，导致我们无法在"),a("code",[t._v("handleProxy")]),t._v(" 中区分到底是什么事件，所以你在监听此类事件的时候同时监听事件名和事件类型既 ``")]),t._v(" "),a("li",[t._v("小程序能力所致，bind 和 catch 事件同时绑定时候，只会触发 bind ,catch 不会被触发，要避免踩坑。")]),t._v(" "),a("li",[t._v("事件修饰符\n"),a("ul",[a("li",[a("code",[t._v(".stop")]),t._v(" 的使用会阻止冒泡，但是同时绑定了一个非冒泡事件，会导致该元素上的 catchEventName 失效！")]),t._v(" "),a("li",[a("code",[t._v(".prevent")]),t._v(" 可以直接干掉，因为小程序里没有什么默认事件，比如submit并不会跳转页面")]),t._v(" "),a("li",[a("code",[t._v(".capture")]),t._v(" 支持 "),a("code",[t._v("1.0.9")])]),t._v(" "),a("li",[a("code",[t._v(".self")]),t._v(" 没有可以判断的标识")]),t._v(" "),a("li",[a("code",[t._v(".once")]),t._v(" 也不能做，因为小程序没有 removeEventListener, 虽然可以直接在 handleProxy 中处理，但非常的不优雅，违背了原意")])])])])])}),[],!1,null,null,null);a.default=v.exports}}]);